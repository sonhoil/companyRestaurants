<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.restaurants.cafeteria.mapper.CafeteriaMapper">

    <insert id="insertCafeteria" parameterType="com.company.restaurants.cafeteria.domain.CafeteriaDTO">
        INSERT INTO cafeteria (name, location, operating_hours, menu, contact, latitude, longitude)
        VALUES (#{name}, #{location}, #{operatingHours}, #{menu}, #{contact}, #{latitude}, #{longitude})
    </insert>

    <select id="searchCafeteria" parameterType="map" resultType="com.company.restaurants.cafeteria.domain.CafeteriaDTO">
        SELECT cafeteria.*, weekly_menu.menu,
               ( 6371 * acos( cos( radians(#{latitude}) ) * cos( radians( latitude ) ) * cos( radians( longitude ) - radians(#{longitude}) ) + sin( radians(#{latitude}) ) * sin( radians( latitude ) ) ) ) AS distance
        FROM cafeteria
        LEFT JOIN weekly_menu ON cafeteria.cafeteria_id = weekly_menu.cafeteria_id
        WHERE weekly_menu.meal_time = #{mealTime}
        <if test="name != null and name != ''">
            AND cafeteria.name LIKE CONCAT('%', #{name}, '%')
        </if>
        <if test="location != null and location != ''">
            AND cafeteria.location LIKE CONCAT('%', #{location}, '%')
        </if>
        HAVING 1 >= distance
        ORDER BY distance
        LIMIT 10
    </select>

    <select id="searchAllCafeteriasOrderedByDistance" parameterType="map" resultType="com.company.restaurants.cafeteria.domain.CafeteriaDTO">
        SELECT cafeteria.*, ( 6371 * acos( cos( radians(#{latitude}) ) * cos( radians( latitude ) ) * cos( radians( longitude ) - radians(#{longitude}) ) + sin( radians(#{latitude}) ) * sin( radians( latitude ) ) ) ) AS distance
        FROM cafeteria
        ORDER BY distance
        LIMIT 10
    </select>

     <insert id="insertWeeklyMenu" parameterType="com.company.restaurants.cafeteria.domain.WeeklyMenuDTO">
        <foreach collection="menuItems" item="menuItem" separator=";">
            INSERT INTO weekly_menu (cafeteria_id, day_of_week, meal_time, menu_item, image_url)
            VALUES (#{cafeteriaId}, #{dayOfWeek}, #{mealTime}, #{menuItem}, #{imageUrl})
        </foreach>
    </insert>

    <select id="getWeeklyMenu" parameterType="long" resultType="com.company.restaurants.cafeteria.domain.WeeklyMenuDTO">
        SELECT * FROM weekly_menu
        WHERE cafeteria_id = #{cafeteriaId}
    </select>

    <insert id="insertFavoriteCafeteria" parameterType="com.company.restaurants.cafeteria.domain.FavoriteCafeteriaDTO">
        INSERT INTO favorite_cafeteria (user_id, cafeteria_id)
        VALUES (#{userId}, #{cafeteriaId})
    </insert>

    <select id="getFavoriteCafeterias" parameterType="long" resultType="com.company.restaurants.cafeteria.domain.CafeteriaDTO">
        SELECT cafeteria.* FROM cafeteria
        JOIN favorite_cafeteria favorite ON cafeteria.cafeteria_id = favorite.cafeteria_id
        WHERE favorite.user_id = #{userId}
    </select>

    <insert id="insertMenuReview" parameterType="com.company.restaurants.cafeteria.domain.MenuReviewDTO">
        INSERT INTO menu_review (weekly_menu_id, user_id, rating, comment, image_url)
        VALUES (#{weeklyMenuId}, #{userId}, #{rating}, #{comment}, #{imageUrl})
    </insert>

    <select id="getMenuReviews" parameterType="long" resultType="com.company.restaurants.cafeteria.domain.MenuReviewDTO">
        SELECT * FROM menu_review
        WHERE weekly_menu_id = #{weeklyMenuId}
    </select>

    <select id="getCafeteriaByWeeklyMenuId" parameterType="long" resultType="com.company.restaurants.cafeteria.domain.CafeteriaDTO">
        SELECT cafeteria.* FROM cafeteria
        JOIN weekly_menu ON cafeteria.cafeteria_id = weekly_menu.cafeteria_id
        WHERE weekly_menu.weekly_menu_id = #{weeklyMenuId}
    </select>

    <insert id="insertMenuItemLike" parameterType="com.company.restaurants.cafeteria.domain.MenuItemLikeDTO">
        INSERT INTO menu_item_like (weekly_menu_id, menu_item, user_id)
        VALUES (#{weeklyMenuId}, #{menuItem}, #{userId})
    </insert>

</mapper>
